class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
        for(int a:nums){
            sum=sum+a;
        }
         Boolean dp[][]=new Boolean[201][sum];
        if(sum%2!=0)return false;
        return helper(0,nums,sum/2,dp);
    }
   
    boolean helper(int i,int nums[],int target,Boolean dp[][]){
        if(target==0)return true;
        if(i==nums.length-1)return target==nums[nums.length-1];
        if(dp[i][target]!=null)return dp[i][target];
        boolean nt=helper(i+1,nums,target,dp);
        boolean t=false;
        if(target>nums[i]){
            t=helper(i+1,nums,target-nums[i],dp);
        }
        return  dp[i][target]= (t || nt);
    }
}
